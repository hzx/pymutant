
COMMENTS

# bash like one line comments

/*
multiline comment
*/



OPERATORS

or
and
is
isnot
not
in
+
+=
-
-=
*
*=
/
/=



TYPES

var
bool
int
float
string
type[]
type:type{}
name - enum, class, define name



SYSTEM VALUES

true
false
none



REGEXES

/^\s*$/gi



CODE FLOWS

if expression {
  complex_operator
} else {
  complex_operator
}

/*
dont use loops, it's evil
instead use sql like syntax
*/

select concat coll1, coll2;

select from photos where create_date > '2010-11-12'
  and hidden = false
  or role = 'admin'
  order by rating

# CUSTOM TYPES
# dot notations


validateInt(value) {
  return /\d+/gi.test(value);
}

struct World {
  int X validateInt;
  int Y optional;
}

enum PhoneType {
  MOBILE = 0;
  HOME = 1;
  WORK = 2;
}

class Foo {
  type data = expression; # may use self keyword
  type name;

  // constructor
  () {
  }

  type work() {
  }
}

# instantiate

type foo = Foo();

type foo = Foo() {
  data: "dat1",
  name: "Vasya"
};

# tag attributes
# id=litstring
# class={array_decl}|name
# style={map_decl}|name
